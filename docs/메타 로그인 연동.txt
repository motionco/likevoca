메타 로그인 연동
1666040507345080

e7ab6212e33f159a9fca02198c7d5213


2. JavaScript용 Facebook SDK 설정

<script>
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '{your-app-id}',
      cookie     : true,
      xfbml      : true,
      version    : '{api-version}'
    });
      
    FB.AppEvents.logPageView();   
      
  };

  (function(d, s, id){
     var js, fjs = d.getElementsByTagName(s)[0];
     if (d.getElementById(id)) {return;}
     js = d.createElement(s); js.id = id;
     js.src = "https://connect.facebook.net/en_US/sdk.js";
     fjs.parentNode.insertBefore(js, fjs);
   }(document, 'script', 'facebook-jssdk'));
</script>


3. 로그인 상태 확인
웹 페이지를 읽어들일 때 첫 번째 단계로 사용자가 Facebook 로그인을 사용하여 이미 앱에 로그인했는지 확인합니다. FB.getLoginStatus를 호출하여 이 프로세스를 시작합니다. 이 함수는 Facebook 호출을 요청하여 로그인 상태를 가져오고 결과를 통해 콜백 함수를 호출합니다.
다음은 위의 샘플 코드에서 발췌한 내용으로 페이지를 읽어들이는 중에 사용자의 로그인 상태를 확인하기 위해 실행되는 코드입니다.


FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
});

콜백에 제공되는 response 개체에는 다음과 같은 여러 필드가 포함되어 있습니다.


{
    status: 'connected',
    authResponse: {
        accessToken: '...',
        expiresIn:'...',
        signedRequest:'...',
        userID:'...'
    }
}


====
status는 앱 사용자의 로그인 상태를 지정합니다. 상태는 다음 중 하나일 수 있습니다.
connected - 사용자가 Facebook에 로그인하고 앱에 로그인했습니다.
not_authorized - 사용자가 Facebook에는 로그인했지만 앱에는 로그인하지 않았습니다.
unknown - 사용자가 Facebook에 로그인하지 않았으므로 사용자가 앱에 로그인했거나 FB.logout()이 호출되었는지 알 수 없어, Facebook에 연결할 수 없습니다.
connected 상태인 경우 authResponse가 포함되며 다음과 같이 구성되어 있습니다.
accessToken - 앱 사용자의 액세스 토큰이 포함되어 있습니다.
expiresIn - 토큰이 만료되어 갱신해야 하는 UNIX 시간을 표시합니다.
signedRequest - 앱 사용자에 대한 정보를 포함하는 서명된 매개변수입니다.
userID - 앱 사용자의 ID입니다.
앱에서 앱 사용자의 로그인 상태를 알게 되면 다음 중 하나를 수행할 수 있습니다.
사용자가 Facebook과 앱에 로그인한 경우 앱의 로그인된 환경으로 리디렉션됩니다.
사용자가 앱에 로그인하지 않았거나 Facebook에 로그인하지 않은 경우 FB.login()을 사용하여 로그인 대화 상자에 메시지를 표시하거나 로그인 버튼을 표시합니다.


===

4. Facebook 로그인 버튼 추가

페이지에 로그인 버튼을 손쉽게 포함할 수 있습니다. 로그인 버튼 문서를 참조하여 원하는 방식으로 버튼을 설정하세요. 그런 다음 코드 받기를 클릭하면 페이지에 버튼을 표시하기 위해 필요한 코드가 표시됩니다.
로그인 상태를 확인하여 사용자가 로그인했는지 확인하는 JavaScript 콜백을 설정하기 위해 다음과 같이 버튼에서 onlogin 속성을 사용합니다.

<fb:login-button 
  scope="public_profile,email"
  onlogin="checkLoginState();">
</fb:login-button>

이를 콜백이라 하며 최신 로그인 상태를 얻기 위해 FB.getLoginStatus()를 호출합니다. 아래 예시에 있는 statusChangeCallback()은 응답을 처리하는 함수입니다.


function checkLoginState() {
  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });
}



5. 다음 단계
축하합니다. 웹사이트에 Facebook 로그인이 추가되었습니다! 자세한 고급 가이드는 Facebook의 다른 문서 페이지를 확인하세요.
데이터 삭제 콜백 구현share-external
사용자가 Facebook에서 자신의 데이터를 삭제해달라고 요청할 경우 이 요청에 응답하기 위한 데이터 삭제 콜백을 구현하세요.
로그인 대화 상자share-external
Facebook 로그인 버튼 대신 자체 버튼을 사용하여 로그인 대화 상자를 호출하세요.
액세스 토큰share-external
Facebook 로그인에 의해 생성된 액세스 토큰을 웹사이트에 사용하세요.
권한share-external
앱에서 Facebook 로그인을 통해 액세스할 수 있는 데이터를 관리하세요.
앱 검수share-external
Facebook 로그인을 사용하여 사람들에게 요청하는 Facebook 데이터에 따라 출시 전에 검수를 위해 앱을 제출해야 할 수 있습니다.


