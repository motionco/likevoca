/**
 * Îã§Íµ≠Ïñ¥ Îã®Ïñ¥Ïû• Ï†ÑÏö© Í∞úÎÖê Ìé∏Ïßë Î™®Îã¨ Í¥ÄÎ¶¨ Ïä§ÌÅ¨Î¶ΩÌä∏
 *
 * Ïó≠Ìï†: Îã§Íµ≠Ïñ¥ Îã®Ïñ¥Ïû• Í∞úÎÖê Ìé∏Ïßë Ï†ÑÏö©
 *
 * Íµ¨Î∂Ñ:
 * - ai-edit-concept-modal.js: AI Í∞úÎÖê Ìé∏Ïßë Ï†ÑÏö©
 * - edit-concept-modal.js: Îã§Íµ≠Ïñ¥ Îã®Ïñ¥Ïû• Ìé∏Ïßë Ï†ÑÏö© (Ïù¥ ÌååÏùº)
 * - concept-modal.js: Í∞úÎÖê Î≥¥Í∏∞ Ï†ÑÏö© (ÏùΩÍ∏∞ Ï†ÑÏö©)
 */

import {
  auth,
  db,
  conceptUtils,
  supportedLanguages,
} from "../../js/firebase/firebase-init.js";
import { getActiveLanguage } from "../../utils/language-utils.js";
import {
  validateEditForm,
  collectEditFormData,
  resetEditForm,
  closeEditModal,
  initLanguageTabEventListeners,
  switchLanguageTab,
  addEditExampleFields,
  updateStaticLabels,
  getDefaultPartOfSpeech,
  translatePartOfSpeech,
} from "./concept-modal-utils.js";

// Ï†ÑÏó≠ Î≥ÄÏàò (Ìé∏Ïßë Î™®Îìú Ï†ÑÏö©)
let editConceptId = null;
let supportedLangs = { ...supportedLanguages };

// Ìé∏Ïßë Î™®Îã¨ Ï¥àÍ∏∞Ìôî
export async function initialize() {
  console.log("üîÑ Í∞úÎÖê Ìé∏Ïßë Î™®Îã¨ Ï¥àÍ∏∞Ìôî");

  // Ìé∏Ïßë ÏÉÅÌÉú ÌôïÏù∏
  editConceptId = sessionStorage.getItem("editConceptId");

  if (!editConceptId) {
    console.error("‚ùå Ìé∏ÏßëÌï† Í∞úÎÖê IDÍ∞Ä ÏóÜÏäµÎãàÎã§");
    alert("Ìé∏ÏßëÌï† Í∞úÎÖêÏù¥ ÏßÄÏ†ïÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.");
    closeModal();
    return;
  }

  console.log("üìù Ìé∏Ïßë ÎåÄÏÉÅ Í∞úÎÖê ID:", editConceptId);

  // Î™®Îã¨ Ï†úÎ™©Í≥º Î≤ÑÌäº ÏÑ§Ï†ï
  const modalTitle = document.querySelector("#edit-concept-modal h2");
  if (modalTitle) modalTitle.textContent = "Í∞úÎÖê ÏàòÏ†ï";

  const saveBtn = document.getElementById("save-edit-concept");
  if (saveBtn) saveBtn.textContent = "ÏàòÏ†ïÌïòÍ∏∞";

  // Ï†ÄÏû• Î≤ÑÌäº Ïù¥Î≤§Ìä∏ ÏÑ§Ï†ï
  if (saveBtn) {
    saveBtn.addEventListener("click", (e) => {
      e.preventDefault();
      console.log("üíæ ÏàòÏ†ï Î≤ÑÌäº ÌÅ¥Î¶≠Îê®, Í∏∞Î≥∏ ÎèôÏûë Î∞©ÏßÄÎê®");
      saveConcept();
    });
  }

  // Ï∑®ÏÜå Î≤ÑÌäº Ïù¥Î≤§Ìä∏ ÏÑ§Ï†ï
  const cancelBtn = document.getElementById("cancel-edit-concept");
  if (cancelBtn) {
    cancelBtn.addEventListener("click", (e) => {
      e.preventDefault();
      console.log("‚ùå Ï∑®ÏÜå Î≤ÑÌäº ÌÅ¥Î¶≠Îê®");

      if (confirm("Ìé∏ÏßëÏùÑ Ï∑®ÏÜåÌïòÏãúÍ≤†ÏäµÎãàÍπå? Î≥ÄÍ≤ΩÏÇ¨Ìï≠Ïù¥ Ï†ÄÏû•ÎêòÏßÄ ÏïäÏäµÎãàÎã§.")) {
        resetEditForm();
        closeEditModal();
        sessionStorage.removeItem("editConceptId");
        editConceptId = null;
        console.log("‚úÖ Ìé∏Ïßë Ï∑®ÏÜå ÏôÑÎ£å");
      }
    });
  }

  // X Î≤ÑÌäº Ïù¥Î≤§Ìä∏ ÏÑ§Ï†ï
  const closeBtn = document.getElementById("close-edit-concept-modal");
  if (closeBtn) {
    closeBtn.addEventListener("click", (e) => {
      e.preventDefault();
      console.log("‚ùå X Î≤ÑÌäº ÌÅ¥Î¶≠Îê®");

      if (confirm("Ìé∏ÏßëÏùÑ Ï∑®ÏÜåÌïòÏãúÍ≤†ÏäµÎãàÍπå? Î≥ÄÍ≤ΩÏÇ¨Ìï≠Ïù¥ Ï†ÄÏû•ÎêòÏßÄ ÏïäÏäµÎãàÎã§.")) {
        resetEditForm();
        closeEditModal();
        sessionStorage.removeItem("editConceptId");
        editConceptId = null;
        console.log("‚úÖ Ìé∏Ïßë Ï∑®ÏÜå ÏôÑÎ£å");
      }
    });
  }

  // ÌôòÍ≤Ω ÏÑ§Ï†ï Ïñ∏Ïñ¥ Í∞ÄÏ†∏Ïò§Í∏∞
  let userLanguage = "ko";
  try {
    userLanguage = await getActiveLanguage();
    console.log("üåê ÏÇ¨Ïö©Ïûê Ïñ∏Ïñ¥:", userLanguage);
  } catch (error) {
    console.warn("Ïñ∏Ïñ¥ ÏÑ§Ï†ï Î°úÎìú Ïã§Ìå®, Í∏∞Î≥∏Í∞í ÏÇ¨Ïö©:", error);
  }

  // HTML Ï†ïÏ†Å Î†àÏù¥Î∏îÎì§ÏùÑ ÌôòÍ≤Ω ÏÑ§Ï†ï Ïñ∏Ïñ¥Î°ú ÏóÖÎç∞Ïù¥Ìä∏
  await updateStaticLabels(userLanguage);

  // Ïñ∏Ïñ¥ ÌÉ≠ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà ÏÑ§Ï†ï (Ïª§Ïä§ÌÖÄ Ìï®Ïàò ÏÇ¨Ïö©)
  setupEditLanguageTabs();

  // ÏòàÎ¨∏ Ï∂îÍ∞Ä Î≤ÑÌäº Ïù¥Î≤§Ìä∏ ÏÑ§Ï†ï
  const addExampleBtn = document.getElementById("edit-add-example");
  if (addExampleBtn) {
    addExampleBtn.addEventListener("click", (e) => {
      e.preventDefault();
      console.log("‚ûï ÏòàÎ¨∏ Ï∂îÍ∞Ä Î≤ÑÌäº ÌÅ¥Î¶≠Îê®");
      addEditExampleFields(null, false);
    });
  }

  // Í∞úÎÖê Îç∞Ïù¥ÌÑ∞ Î°úÎìú Î∞è Ìèº Ï±ÑÏö∞Í∏∞
  await fetchConceptForEdit(editConceptId);
}

// Ìé∏ÏßëÏö© Í∞úÎÖê Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞
async function fetchConceptForEdit(conceptId) {
  try {
    console.log("üìã Ìé∏ÏßëÏö© Í∞úÎÖê Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞:", conceptId);

    let conceptData = null;

    // Î©îÎ™®Î¶¨ÏóêÏÑú Í∞úÎÖê Ï∞æÍ∏∞ (Ïó¨Îü¨ ÏÜåÏä§ ÌôïÏù∏)
    const sources = [
      () => window.currentConcepts,
      () => window.allConcepts,
      () => (typeof allConcepts !== "undefined" ? allConcepts : null),
    ];

    for (const getSource of sources) {
      const sourceData = getSource();
      if (sourceData && sourceData.length > 0) {
        conceptData = sourceData.find(
          (concept) =>
            concept.concept_id === conceptId ||
            concept.id === conceptId ||
            concept._id === conceptId
        );
        if (conceptData) {
          console.log("üíæ Î©îÎ™®Î¶¨ÏóêÏÑú Í∞úÎÖê Î∞úÍ≤¨");
          break;
        }
      }
    }

    // Î©îÎ™®Î¶¨ÏóêÏÑú Ï∞æÏßÄ Î™ªÌñàÏúºÎ©¥ Firebase Ï°∞Ìöå
    if (!conceptData) {
      console.log("üîç FirebaseÏóêÏÑú Í∞úÎÖê Ï°∞Ìöå ÏãúÎèÑ...");
      try {
        conceptData = await conceptUtils.getConcept(conceptId);
        console.log(
          "üî• ÏùºÎ∞ò Í∞úÎÖê Ï°∞Ìöå ÏÑ±Í≥µ:",
          conceptData.concept_id || conceptData.id
        );
      } catch (firebaseError) {
        console.error("‚ùå Firebase Ï°∞Ìöå Ïã§Ìå®:", firebaseError);
        throw new Error(
          "Í∞úÎÖê Ï†ïÎ≥¥Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§. ÌéòÏù¥ÏßÄÎ•º ÏÉàÎ°úÍ≥†Ïπ® ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî."
        );
      }
    }

    if (!conceptData) {
      throw new Error("Í∞úÎÖê Ï†ïÎ≥¥Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.");
    }

    console.log("‚úÖ Í∞úÎÖê Îç∞Ïù¥ÌÑ∞ Î°úÎìú ÏÑ±Í≥µ");
    fillFormWithConceptData(conceptData);
  } catch (error) {
    console.error("‚ùå Í∞úÎÖê Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•ò:", error);
    alert(error.message || "Í∞úÎÖê Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.");
  }
}

// ÌèºÏóê Í∞úÎÖê Îç∞Ïù¥ÌÑ∞ Ï±ÑÏö∞Í∏∞
function fillFormWithConceptData(conceptData) {
  console.log("üìù Ìèº Îç∞Ïù¥ÌÑ∞ Ï±ÑÏö∞Í∏∞ ÏãúÏûë");

  // Í∞úÎÖê Ï†ïÎ≥¥ Ï±ÑÏö∞Í∏∞
  const domainField = document.getElementById("edit-concept-domain");
  const categoryField = document.getElementById("edit-concept-category");
  const emojiField = document.getElementById("edit-concept-emoji");

  if (domainField) {
    domainField.value =
      conceptData.concept_info?.domain ||
      conceptData.domain ||
      conceptData.concept_info?.category ||
      "general";
  }
  if (categoryField) {
    categoryField.value =
      conceptData.concept_info?.category || conceptData.category || "common";
  }
  if (emojiField) {
    emojiField.value =
      conceptData.concept_info?.emoji ||
      conceptData.concept_info?.unicode_emoji ||
      conceptData.unicode_emoji ||
      "üìù";
  }

  // Ïñ∏Ïñ¥Î≥Ñ ÌëúÌòÑ Ï±ÑÏö∞Í∏∞
  if (conceptData.expressions) {
    for (const [lang, expression] of Object.entries(conceptData.expressions)) {
      const wordField = document.getElementById(`edit-${lang}-word`);
      const pronunciationField = document.getElementById(
        `edit-${lang}-pronunciation`
      );
      const definitionField = document.getElementById(
        `edit-${lang}-definition`
      );
      const posField = document.getElementById(`edit-${lang}-pos`);

      if (wordField) wordField.value = expression.word || "";
      if (pronunciationField)
        pronunciationField.value = expression.pronunciation || "";
      if (definitionField) definitionField.value = expression.definition || "";
      if (posField) {
        const originalPos = expression.part_of_speech || "Î™ÖÏÇ¨";
        const currentLangOptions = Array.from(posField.options).map(
          (opt) => opt.value
        );

        let finalPos;
        if (currentLangOptions.includes(originalPos)) {
          finalPos = originalPos;
        } else {
          finalPos = translatePartOfSpeech(originalPos, lang);
        }

        if (currentLangOptions.includes(finalPos)) {
          posField.value = finalPos;
        } else {
          posField.value = getDefaultPartOfSpeech(lang);
        }
      }

      // Í≥†Í∏â ÌïÑÎìúÎì§ Ï≤òÎ¶¨
      const synonymsField = document.getElementById(`edit-${lang}-synonyms`);
      const antonymsField = document.getElementById(`edit-${lang}-antonyms`);
      const collocationsField = document.getElementById(
        `edit-${lang}-collocations`
      );
      const compoundWordsField = document.getElementById(
        `edit-${lang}-compound-words`
      );

      if (synonymsField && expression.synonyms) {
        synonymsField.value = Array.isArray(expression.synonyms)
          ? expression.synonyms.join(", ")
          : expression.synonyms;
      }
      if (antonymsField && expression.antonyms) {
        antonymsField.value = Array.isArray(expression.antonyms)
          ? expression.antonyms.join(", ")
          : expression.antonyms;
      }
      if (collocationsField && expression.collocations) {
        collocationsField.value = Array.isArray(expression.collocations)
          ? expression.collocations.join(", ")
          : expression.collocations;
      }
      if (compoundWordsField && expression.compound_words) {
        compoundWordsField.value = Array.isArray(expression.compound_words)
          ? expression.compound_words.join(", ")
          : expression.compound_words;
      }
    }
  }

  // ÏòàÏ†ú Ï±ÑÏö∞Í∏∞
  const examplesContainer = document.getElementById("edit-examples-container");
  if (examplesContainer) {
    console.log("üîç Îã§Íµ≠Ïñ¥ Ìé∏Ïßë Î™®Îã¨ ÏòàÎ¨∏ Ï±ÑÏö∞Í∏∞ ÏãúÏûë:", {
      representative_example: conceptData.representative_example,
      examples: conceptData.examples,
      examples_length: conceptData.examples?.length,
    });

    examplesContainer.innerHTML = "";

    let hasExamples = false;

    // ÎåÄÌëú ÏòàÎ¨∏ Ï≤òÎ¶¨
    if (conceptData.representative_example) {
      let repExample = null;

      if (conceptData.representative_example.translations) {
        repExample = conceptData.representative_example.translations;
      } else if (
        conceptData.representative_example.korean ||
        conceptData.representative_example.english
      ) {
        repExample = conceptData.representative_example;
      }

      if (
        repExample &&
        (repExample.korean ||
          repExample.english ||
          repExample.japanese ||
          repExample.chinese)
      ) {
        console.log("‚úÖ Îã§Íµ≠Ïñ¥ ÎåÄÌëú ÏòàÎ¨∏ Ï∂îÍ∞Ä:", repExample);
        addEditExampleFields(repExample, true);
        hasExamples = true;
      }
    }

    // Ï∂îÍ∞Ä ÏòàÏ†úÎì§ Ï≤òÎ¶¨
    if (
      conceptData.examples &&
      Array.isArray(conceptData.examples) &&
      conceptData.examples.length > 0
    ) {
      console.log("üîç Îã§Íµ≠Ïñ¥ Ï∂îÍ∞Ä ÏòàÎ¨∏ Ï≤òÎ¶¨:", conceptData.examples);
      for (const example of conceptData.examples) {
        console.log("‚úÖ Îã§Íµ≠Ïñ¥ Ï∂îÍ∞Ä ÏòàÎ¨∏ Ï∂îÍ∞Ä:", example);
        addEditExampleFields(example, false);
        hasExamples = true;
      }
    } else {
      console.log(
        "‚ö†Ô∏è Îã§Íµ≠Ïñ¥ Ï∂îÍ∞Ä ÏòàÎ¨∏Ïù¥ ÏóÜÍ±∞ÎÇò Î∞∞Ïó¥Ïù¥ ÏïÑÎãôÎãàÎã§:",
        conceptData.examples
      );
    }

    // ÏòàÎ¨∏Ïù¥ ÏóÜÏúºÎ©¥ Í∏∞Î≥∏ ÎåÄÌëú ÏòàÎ¨∏ ÌïÑÎìú Ï∂îÍ∞Ä
    if (!hasExamples) {
      console.log("‚ö†Ô∏è Îã§Íµ≠Ïñ¥ ÏòàÎ¨∏Ïù¥ ÏóÜÏñ¥ÏÑú Í∏∞Î≥∏ ÏòàÎ¨∏ ÌïÑÎìú Ï∂îÍ∞Ä");
      addEditExampleFields(null, true);
    }

    console.log(
      "üîç Îã§Íµ≠Ïñ¥ ÏòàÎ¨∏ Ï±ÑÏö∞Í∏∞ ÏôÑÎ£å. Ïª®ÌÖåÏù¥ÎÑà ÎÇ¥Ïö©:",
      examplesContainer.children.length,
      "Í∞ú ÏòàÎ¨∏"
    );
  }

  console.log("‚úÖ Ìèº Îç∞Ïù¥ÌÑ∞ Ï±ÑÏö∞Í∏∞ ÏôÑÎ£å");
}

// Í∞úÎÖê ÏàòÏ†ï Ï†ÄÏû•
async function saveConcept() {
  try {
    console.log("üîÑ Í∞úÎÖê ÏàòÏ†ï ÏãúÏûë:", editConceptId);

    if (!validateEditForm()) {
      console.log("‚ùå Ìèº Í≤ÄÏ¶ù Ïã§Ìå®");
      return;
    }

    console.log("‚úÖ Ìèº Í≤ÄÏ¶ù ÌÜµÍ≥º");
    const conceptData = collectEditFormData();
    console.log("üìã ÏàòÏßëÎêú Îç∞Ïù¥ÌÑ∞:", conceptData);

    try {
      // Îã§Íµ≠Ïñ¥ Îã®Ïñ¥Ïû• Í∞úÎÖê ÏàòÏ†ï
      console.log("üìù Îã§Íµ≠Ïñ¥ Îã®Ïñ¥Ïû• Í∞úÎÖê ÏàòÏ†ï ÏãúÎèÑ...");
      await conceptUtils.updateConcept(editConceptId, conceptData);
      console.log("‚úÖ Îã§Íµ≠Ïñ¥ Îã®Ïñ¥Ïû• Í∞úÎÖê ÏàòÏ†ï ÏÑ±Í≥µ");

      alert("Í∞úÎÖêÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏàòÏ†ïÎêòÏóàÏäµÎãàÎã§.");

      resetEditForm();
      closeEditModal();

      // ÌôîÎ©¥ ÏóÖÎç∞Ïù¥Ìä∏ Ïù¥Î≤§Ìä∏ Î∞úÏÉù
      console.log("üîî Í∞úÎÖê ÏàòÏ†ï ÏôÑÎ£å - ÌôîÎ©¥ ÏóÖÎç∞Ïù¥Ìä∏ Ïù¥Î≤§Ìä∏ Î∞úÏÉù");
      if (window.dispatchEvent) {
        window.dispatchEvent(new CustomEvent("concept-saved"));
        console.log("‚úÖ concept-saved Ïù¥Î≤§Ìä∏ Î∞úÏÉù ÏôÑÎ£å");
      }

      // Ìé∏Ïßë ÏÉÅÌÉú Ï¥àÍ∏∞Ìôî
      sessionStorage.removeItem("editConceptId");
      editConceptId = null;

      // ÌéòÏù¥ÏßÄ ÏÉàÎ°úÍ≥†Ïπ®ÏúºÎ°ú Ï¶âÍ∞Å Î∞òÏòÅ
      console.log("üîÑ ÌéòÏù¥ÏßÄ ÏÉàÎ°úÍ≥†Ïπ®ÏúºÎ°ú Î≥ÄÍ≤ΩÏÇ¨Ìï≠ Ï¶âÍ∞Å Î∞òÏòÅ");
      setTimeout(() => {
        window.location.reload();
      }, 100);
    } catch (updateError) {
      console.error("‚ùå Í∞úÎÖê ÏàòÏ†ï Ïã§Ìå®:", updateError);
      alert(`Í∞úÎÖêÏùÑ ÏàòÏ†ïÌïòÎäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§:\n${updateError.message}`);
      return;
    }
  } catch (error) {
    console.error("Í∞úÎÖê ÏàòÏ†ï Ï§ë Ï†ÑÏ≤¥ Ïò§Î•ò Î∞úÏÉù:", error);
    alert(`Í∞úÎÖêÏùÑ ÏàòÏ†ïÌïòÎäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§:\n${error.message}`);
  }
}

// Ìé∏Ïßë Î™®Îã¨Ïö© Ïñ∏Ïñ¥ÌÉ≠ ÏÑ§Ï†ï
function setupEditLanguageTabs() {
  console.log("üîÑ Ìé∏Ïßë Î™®Îã¨ Ïñ∏Ïñ¥ÌÉ≠ ÏÑ§Ï†ï");

  // Ìé∏Ïßë Î™®Îã¨ Ïª®ÌÖçÏä§Ìä∏ ÎÇ¥ÏóêÏÑúÎßå ÏöîÏÜå Ï∞æÍ∏∞
  const editModal = document.getElementById("edit-concept-modal");
  if (!editModal) {
    console.error("‚ùå Ìé∏Ïßë Î™®Îã¨ÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏùå");
    return;
  }

  const tabButtons = editModal.querySelectorAll(
    "#edit-language-tabs .edit-language-tab"
  );

  // Î™®Îì† Í∏∞Ï°¥ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà ÏôÑÏ†Ñ Ï†úÍ±∞
  tabButtons.forEach((button) => {
    // ÏÉàÎ°úÏö¥ ÌÅ¥Î°† ÏÉùÏÑ±ÏúºÎ°ú Î™®Îì† Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï†úÍ±∞
    const newButton = button.cloneNode(true);
    button.parentNode.replaceChild(newButton, button);
  });

  // ÏÉàÎ°úÏö¥ Î≤ÑÌäºÎì§Ïóê Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï∂îÍ∞Ä
  const newTabButtons = editModal.querySelectorAll(
    "#edit-language-tabs .edit-language-tab"
  );
  newTabButtons.forEach((button) => {
    button.addEventListener("click", handleTabClick);
  });

  // Ï≤´ Î≤àÏß∏ ÌÉ≠ ÏûêÎèô ÌôúÏÑ±Ìôî
  if (newTabButtons.length > 0) {
    const firstTab = newTabButtons[0];
    const firstLanguage = firstTab.dataset.language;
    switchEditLanguageTab(firstLanguage);
  }

  console.log("‚úÖ Ìé∏Ïßë Î™®Îã¨ Ïñ∏Ïñ¥ÌÉ≠ ÏÑ§Ï†ï ÏôÑÎ£å");
}

// ÌÉ≠ ÌÅ¥Î¶≠ Ìï∏Îì§Îü¨
function handleTabClick(e) {
  e.preventDefault();
  const language = e.currentTarget.dataset.language;
  console.log("üñ±Ô∏è Ìé∏Ïßë Î™®Îã¨ Ïñ∏Ïñ¥ ÌÉ≠ ÌÅ¥Î¶≠:", language);
  switchEditLanguageTab(language);
}

// Ìé∏Ïßë Î™®Îã¨Ïö© Ïñ∏Ïñ¥ÌÉ≠ Ï†ÑÌôò
function switchEditLanguageTab(language) {
  console.log("üîÑ Ìé∏Ïßë Î™®Îã¨ Ïñ∏Ïñ¥ ÌÉ≠ Ï†ÑÌôò:", language);

  // Ìé∏Ïßë Î™®Îã¨ Ïª®ÌÖçÏä§Ìä∏ ÎÇ¥ÏóêÏÑúÎßå ÏöîÏÜå Ï∞æÍ∏∞
  const editModal = document.getElementById("edit-concept-modal");
  if (!editModal) {
    console.error("‚ùå Ìé∏Ïßë Î™®Îã¨ÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏùå");
    return;
  }

  // Î™®Îì† ÌÉ≠ Î≤ÑÌäº ÎπÑÌôúÏÑ±Ìôî (Ìé∏Ïßë Î™®Îã¨ ÎÇ¥ÏóêÏÑúÎßå)
  const allTabs = editModal.querySelectorAll(
    "#edit-language-tabs .edit-language-tab"
  );
  console.log("üîç Ï†ÑÏ≤¥ ÌÉ≠ Î≤ÑÌäº Ïàò:", allTabs.length);
  allTabs.forEach((tab, index) => {
    console.log(
      `üîç ÌÉ≠ ${index}: ${tab.dataset.language}, ÌÅ¥ÎûòÏä§:`,
      tab.className
    );
    tab.classList.remove("border-blue-500", "text-blue-600");
    tab.classList.add("border-transparent", "text-gray-500");
  });

  // Î™®Îì† ÏΩòÌÖêÏ∏† Ïà®Í∏∞Í∏∞ (Ìé∏Ïßë Î™®Îã¨ ÎÇ¥ÏóêÏÑúÎßå)
  const allContents = editModal.querySelectorAll(
    "#edit-language-content .language-content"
  );
  console.log("üîç Ï†ÑÏ≤¥ ÏΩòÌÖêÏ∏† ÏÑπÏÖò Ïàò:", allContents.length);
  allContents.forEach((section, index) => {
    console.log(
      `üîç ÏΩòÌÖêÏ∏† ${index}: ID=${section.id}, ÌÅ¥ÎûòÏä§:`,
      section.className
    );
    section.classList.add("hidden");
    section.style.display = "none"; // Ï∂îÍ∞Ä Î≥¥Ïû•
  });

  // ÏÑ†ÌÉùÎêú ÌÉ≠ ÌôúÏÑ±Ìôî (Ìé∏Ïßë Î™®Îã¨ ÎÇ¥ÏóêÏÑúÎßå)
  const selectedTab = editModal.querySelector(
    `#edit-language-tabs .edit-language-tab[data-language="${language}"]`
  );
  if (selectedTab) {
    selectedTab.classList.remove("border-transparent", "text-gray-500");
    selectedTab.classList.add("border-blue-500", "text-blue-600");
    console.log(
      "‚úÖ Ìé∏Ïßë Î™®Îã¨ ÌÉ≠ ÌôúÏÑ±ÌôîÎê®:",
      language,
      "ÌÅ¥ÎûòÏä§:",
      selectedTab.className
    );
  } else {
    console.error("‚ùå Ìé∏Ïßë Î™®Îã¨ ÌÉ≠ÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏùå:", language);
  }

  // ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏† ÌëúÏãú (Ìé∏Ïßë Î™®Îã¨ ÎÇ¥ÏóêÏÑúÎßå)
  const selectedContent = editModal.querySelector(`#${language}-content`);
  if (selectedContent) {
    selectedContent.classList.remove("hidden");
    selectedContent.style.display = "block"; // Ï∂îÍ∞Ä Î≥¥Ïû•
    console.log("‚úÖ Ìé∏Ïßë Î™®Îã¨ ÏΩòÌÖêÏ∏† ÌëúÏãúÎê®:", language);
    console.log("üîç ÏΩòÌÖêÏ∏† ÏµúÏ¢Ö ÌÅ¥ÎûòÏä§:", selectedContent.className);
    console.log("üîç ÏΩòÌÖêÏ∏† Ïä§ÌÉÄÏùº:", {
      display: selectedContent.style.display,
      visibility: selectedContent.style.visibility,
      height: selectedContent.offsetHeight,
      width: selectedContent.offsetWidth,
    });
  } else {
    console.error("‚ùå Ìé∏Ïßë Î™®Îã¨ ÏΩòÌÖêÏ∏†Î•º Ï∞æÏùÑ Ïàò ÏóÜÏùå:", `${language}-content`);
  }
}

// Ìé∏Ïßë Î™®Îã¨ Ïó¥Í∏∞ (Ï†ÑÏó≠ Ìï®Ïàò)
window.openEditConceptModal = function (conceptId) {
  console.log("üîÑ Í∞úÎÖê Ìé∏Ïßë Î™®Îã¨ Ïó¥Í∏∞:", conceptId);

  // Ìé∏Ïßë ÏÉÅÌÉú ÏÑ§Ï†ï
  sessionStorage.setItem("editConceptId", conceptId);
  editConceptId = conceptId;

  // Î™®Îã¨ ÌëúÏãú
  const modal = document.getElementById("edit-concept-modal");
  if (modal) {
    modal.classList.remove("hidden");
    initialize(); // Ìé∏Ïßë Î™®ÎìúÎ°ú Ï¥àÍ∏∞Ìôî
  } else {
    console.error("‚ùå edit-concept-modal ÏöîÏÜåÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§");
  }
};
