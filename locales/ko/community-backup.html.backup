<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>커뮤니티 - LikeVoca</title>
    
    <!-- 기본 메타 태그 -->
    <meta name="description" content="LikeVoca 커뮤니티 - 학습 가이드, FAQ, 매뉴얼 및 공지사항을 확인하세요. 언어학습 관련 최신 정보와 팁을 공유합니다." />
    <meta name="keywords" content="LikeVoca 커뮤니티, 학습 가이드, FAQ, 매뉴얼, 공지사항, 언어학습 팁" />
    
    <!-- Open Graph / 소셜 미디어 메타 태그 -->
    <meta property="og:title" content="커뮤니티 - LikeVoca" />
    <meta property="og:description" content="LikeVoca 커뮤니티에서 학습 가이드, FAQ, 매뉴얼을 확인하고 언어학습 팁을 공유하세요." />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://likevoca.com/ko/community" />
    <meta property="og:locale" content="ko" />
    
    <!-- 표준 링크 -->
    <link rel="canonical" href="https://likevoca.com/ko/community" />
    
    <!-- 대체 언어 링크 -->
    <link rel="alternate" hreflang="ko" href="https://likevoca.com/ko/community" />
    <link rel="alternate" hreflang="en" href="https://likevoca.com/en/community" />
    <link rel="alternate" hreflang="ja" href="https://likevoca.com/ja/community" />
    <link rel="alternate" hreflang="zh" href="https://likevoca.com/zh/community" />
    <link rel="alternate" hreflang="es" href="https://likevoca.com/es/community" />
    <link rel="alternate" hreflang="x-default" href="https://likevoca.com/en/community" />

    <script src="https://cdn.tailwindcss.com?plugins=forms,typography,aspect-ratio"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <link rel="stylesheet" href="../../css/style.css" />
</head>
<body class="bg-gray-50">
    <div id="navbar-container"></div>

    <main class="container mx-auto max-w-7xl px-4 md:px-6 lg:px-8 py-8 md:py-12">
        <!-- 헤더 섹션 -->
        <header class="text-center mb-12">
            <h1 class="text-4xl md:text-5xl font-bold text-gray-800 mb-6">
                LikeVoca <span class="text-[#4B63AC]">커뮤니티</span>
            </h1>
            <p class="text-lg md:text-xl text-gray-600 max-w-3xl mx-auto">
                언어학습에 도움이 되는 가이드, 팁, 공지사항을 확인하세요
            </p>
        </header>

        <div class="flex flex-col lg:flex-row gap-8">
            <!-- 사이드바 -->
            <aside class="lg:w-1/4">
                <div class="bg-white rounded-xl shadow-lg p-6 sticky top-8">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">
                        <i class="fas fa-filter mr-2 text-[#4B63AC]"></i>
                        필터
                    </h3>
                    
                    <!-- 카테고리 필터 -->
                    <div class="mb-6">
                        <h4 class="font-medium text-gray-700 mb-3">카테고리</h4>
                        <div class="space-y-2">
                            <label class="flex items-center">
                                <input type="checkbox" name="category" value="all" checked class="rounded text-[#4B63AC]">
                                <span class="ml-2 text-sm">전체</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" name="category" value="faq" class="rounded text-[#4B63AC]">
                                <span class="ml-2 text-sm">자주 묻는 질문</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" name="category" value="manual" class="rounded text-[#4B63AC]">
                                <span class="ml-2 text-sm">사용자 매뉴얼</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" name="category" value="guide" class="rounded text-[#4B63AC]">
                                <span class="ml-2 text-sm">학습 가이드</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" name="category" value="notices" class="rounded text-[#4B63AC]">
                                <span class="ml-2 text-sm">공지사항</span>
                            </label>
                        </div>
                    </div>

                    <!-- 우선순위 필터 -->
                    <div class="mb-6">
                        <h4 class="font-medium text-gray-700 mb-3">우선순위</h4>
                        <div class="space-y-2">
                            <label class="flex items-center">
                                <input type="checkbox" name="priority" value="all" checked class="rounded text-[#4B63AC]">
                                <span class="ml-2 text-sm">전체</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" name="priority" value="urgent" class="rounded text-[#4B63AC]">
                                <span class="ml-2 text-sm">긴급</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" name="priority" value="high" class="rounded text-[#4B63AC]">
                                <span class="ml-2 text-sm">높음</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" name="priority" value="normal" class="rounded text-[#4B63AC]">
                                <span class="ml-2 text-sm">보통</span>
                            </label>
                        </div>
                    </div>

                    <!-- 정렬 옵션 -->
                    <div>
                        <h4 class="font-medium text-gray-700 mb-3">정렬</h4>
                        <select id="sortBy" class="w-full rounded-lg border border-gray-300 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#4B63AC]">
                            <option value="newest">최신순</option>
                            <option value="oldest">오래된순</option>
                            <option value="priority">우선순위순</option>
                            <option value="title">제목순</option>
                        </select>
                    </div>
                </div>
            </aside>

            <!-- 메인 콘텐츠 -->
            <div class="lg:w-3/4">
                <!-- 검색바 -->
                <div class="bg-white rounded-xl shadow-lg p-6 mb-8">
                    <div class="flex flex-col md:flex-row gap-4">
                        <div class="flex-1">
                            <div class="relative">
                                <input 
                                    type="text" 
                                    id="searchInput" 
                                    placeholder="궁금한 내용을 검색해보세요..." 
                                    class="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#4B63AC] focus:border-transparent"
                                />
                                <i class="fas fa-search absolute left-4 top-4 text-gray-400"></i>
                            </div>
                        </div>
                        <button id="searchBtn" class="bg-[#4B63AC] text-white px-8 py-3 rounded-lg hover:bg-[#3A4F8B] transition duration-200 flex items-center justify-center">
                            <i class="fas fa-search mr-2"></i>
                            검색
                        </button>
                    </div>
                </div>

                <!-- 콘텐츠 목록 -->
                <div id="contentList" class="space-y-6">
                    <!-- 로딩 상태 -->
                    <div id="loading" class="text-center py-12">
                        <i class="fas fa-spinner fa-spin text-3xl text-gray-400 mb-4"></i>
                        <p class="text-gray-600">콘텐츠를 불러오는 중...</p>
                    </div>
                </div>

                <!-- 빈 상태 -->
                <div id="emptyState" class="text-center py-12 hidden">
                    <i class="fas fa-search text-6xl text-gray-300 mb-6"></i>
                    <h3 class="text-xl font-semibold text-gray-700 mb-2">검색 결과가 없습니다</h3>
                    <p class="text-gray-500 mb-6">다른 검색어나 필터를 사용해보세요.</p>
                    <button onclick="clearFilters()" class="bg-[#4B63AC] text-white px-6 py-3 rounded-lg hover:bg-[#3A4F8B] transition duration-200">
                        필터 초기화
                    </button>
                </div>

                <!-- 페이지네이션 -->
                <div id="pagination" class="flex justify-center mt-8">
                    <!-- 페이지네이션이 여기에 동적으로 추가됩니다 -->
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <div id="footer-container"></div>

    <!-- 스크립트 -->
    <script src="../../components/js/navbar.js"></script>
    <script src="../../components/js/footer.js"></script>
    
    <script type="module">
        import { applyLanguage, updateMetadata, getActiveLanguage } from '../../utils/language-utils.js';
        import { ContentIntegration } from '../../js/content-integration.js';
        import { initializePageSync, addManualRefreshButton } from '../../js/real-time-content-sync.js';
        
        let contentManager;
        let currentPage = 1;
        const itemsPerPage = 10;
        
        document.addEventListener('DOMContentLoaded', async () => {
            try {
                // 네비게이션바 로드
                if (typeof window.loadNavbar === 'function') {
                    await window.loadNavbar();
                }
                
                // Footer 로드
                if (typeof window.loadFooter === 'function') {
                    await window.loadFooter();
                }
                
                // 언어 적용
                await applyLanguage();
                await updateMetadata('community');
                
                // 콘텐츠 관리자 초기화
                contentManager = new ContentIntegration();
                await contentManager.loadContentData();
                
                // localStorage에 샘플 데이터가 없으면 기본 데이터 생성
                if (!contentManager.contentData || contentManager.contentData.length === 0) {
                    console.log('📝 샘플 콘텐츠 데이터를 생성합니다...');
                    const sampleData = generateCommunityContent();
                    localStorage.setItem('multilingual_content', JSON.stringify(sampleData));
                    contentManager.contentData = sampleData;
                    console.log(`✅ 샘플 콘텐츠 ${sampleData.length}개 생성 완료`);
                }
                
                // 실시간 동기화 시작
                initializePageSync('community');
                
                // 수동 새로고침 버튼 추가
                addManualRefreshButton();
                
                // 초기 콘텐츠 로드
                await loadContent();
                
                // 이벤트 리스너 설정
                setupEventListeners();
                
            } catch (error) {
                console.error('커뮤니티 페이지 초기화 중 오류:', error);
                showError('페이지를 불러오는 중 오류가 발생했습니다.');
            }
        });

        // 콘텐츠 로드
        async function loadContent() {
            const loading = document.getElementById('loading');
            const contentList = document.getElementById('contentList');
            const emptyState = document.getElementById('emptyState');
            
            loading.style.display = 'block';
            emptyState.classList.add('hidden');
            
            try {
                console.log('🔍 콘텐츠 로드 시작, contentManager.contentData:', contentManager?.contentData?.length || 0);
                const filters = getActiveFilters();
                const sortBy = document.getElementById('sortBy').value;
                const searchTerm = document.getElementById('searchInput').value.toLowerCase();
                
                // contentManager.contentData가 비어있으면 새로 로드 시도
                if (!contentManager.contentData || contentManager.contentData.length === 0) {
                    console.log('⚠️ 콘텐츠 데이터가 비어있음, 다시 로드 시도...');
                    await contentManager.loadContentData();
                    
                    if (!contentManager.contentData || contentManager.contentData.length === 0) {
                        console.log('📄 데이터가 여전히 비어있음, 샘플 데이터 생성...');
                        const sampleData = generateCommunityContent();
                        localStorage.setItem('multilingual_content', JSON.stringify(sampleData));
                        contentManager.contentData = sampleData;
                    }
                }
                
                let filteredContent = contentManager.contentData;
                
                // 카테고리 필터 적용
                if (!filters.categories.includes('all')) {
                    filteredContent = filteredContent.filter(item => 
                        filters.categories.includes(item.type)
                    );
                }
                
                // 우선순위 필터 적용
                if (!filters.priorities.includes('all')) {
                    filteredContent = filteredContent.filter(item => 
                        filters.priorities.includes(item.priority)
                    );
                }
                
                // 검색어 필터 적용
                if (searchTerm) {
                    filteredContent = filteredContent.filter(item => {
                        const version = item.versions[contentManager.language];
                        if (!version || !version.published) return false;
                        
                        return version.title.toLowerCase().includes(searchTerm) ||
                               version.content.toLowerCase().includes(searchTerm);
                    });
                }
                
                // 언어 및 발행 상태 필터 적용
                filteredContent = filteredContent.filter(item => {
                    const version = item.versions[contentManager.language];
                    return version && version.published;
                });
                
                // 정렬 적용
                filteredContent = sortContent(filteredContent, sortBy);
                
                // 페이지네이션 적용
                const totalPages = Math.ceil(filteredContent.length / itemsPerPage);
                const startIndex = (currentPage - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage;
                const pageContent = filteredContent.slice(startIndex, endIndex);
                
                // 콘텐츠 렌더링
                if (pageContent.length === 0) {
                    contentList.innerHTML = '';
                    emptyState.classList.remove('hidden');
                } else {
                    renderContent(pageContent);
                    renderPagination(totalPages);
                }
                
            } catch (error) {
                console.error('콘텐츠 로드 실패:', error);
                showError('콘텐츠를 불러오는데 실패했습니다.');
            } finally {
                loading.style.display = 'none';
            }
        }

        // 활성 필터 가져오기
        function getActiveFilters() {
            const categories = Array.from(document.querySelectorAll('input[name="category"]:checked'))
                .map(cb => cb.value);
            const priorities = Array.from(document.querySelectorAll('input[name="priority"]:checked'))
                .map(cb => cb.value);
            
            return { categories, priorities };
        }

        // 콘텐츠 정렬
        function sortContent(content, sortBy) {
            switch (sortBy) {
                case 'newest':
                    return content.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt));
                case 'oldest':
                    return content.sort((a, b) => new Date(a.updatedAt) - new Date(b.updatedAt));
                case 'priority':
                    const priorityOrder = { urgent: 3, high: 2, normal: 1 };
                    return content.sort((a, b) => {
                        const aPriority = priorityOrder[a.priority] || 1;
                        const bPriority = priorityOrder[b.priority] || 1;
                        if (aPriority !== bPriority) return bPriority - aPriority;
                        return new Date(b.updatedAt) - new Date(a.updatedAt);
                    });
                case 'title':
                    return content.sort((a, b) => {
                        const aTitle = a.versions[contentManager.language]?.title || '';
                        const bTitle = b.versions[contentManager.language]?.title || '';
                        return aTitle.localeCompare(bTitle);
                    });
                default:
                    return content;
            }
        }

        // 콘텐츠 렌더링
        function renderContent(content) {
            const contentList = document.getElementById('contentList');
            
            const contentHTML = content.map(item => {
                const version = item.versions[contentManager.language];
                if (!version) return '';
                
                const categoryIcons = {
                    faq: 'fa-question-circle',
                    manual: 'fa-book',
                    guide: 'fa-compass',
                    notices: 'fa-bullhorn'
                };
                
                const categoryNames = {
                    faq: '자주 묻는 질문',
                    manual: '사용자 매뉴얼',
                    guide: '학습 가이드',
                    notices: '공지사항'
                };
                
                const priorityBadges = {
                    urgent: 'bg-red-100 text-red-800',
                    high: 'bg-orange-100 text-orange-800',
                    normal: 'bg-blue-100 text-blue-800'
                };
                
                const priorityNames = {
                    urgent: '긴급',
                    high: '높음',
                    normal: '보통'
                };
                
                const safeTitle = version.title.replace(/'/g, '&#39;').replace(/"/g, '&quot;');
                
                return `
                    <article class="bg-white rounded-xl shadow-lg p-6 hover:shadow-xl transition duration-300" onclick="openContentModal('${item.id}')">
                        <div class="flex items-start justify-between mb-4">
                            <div class="flex items-center space-x-3">
                                <div class="w-12 h-12 rounded-lg bg-[#4B63AC] bg-opacity-10 flex items-center justify-center">
                                    <i class="fas ${categoryIcons[item.type] || 'fa-file-alt'} text-[#4B63AC] text-lg"></i>
                                </div>
                                <div>
                                    <h3 class="text-xl font-semibold text-gray-900 hover:text-[#4B63AC] transition duration-200 cursor-pointer">
                                        ${safeTitle}
                                    </h3>
                                    <div class="flex items-center space-x-3 mt-1">
                                        <span class="text-sm text-gray-500">${categoryNames[item.type] || item.type}</span>
                                        <span class="px-2 py-1 rounded-full text-xs font-medium ${priorityBadges[item.priority] || priorityBadges.normal}">
                                            ${priorityNames[item.priority] || item.priority}
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="text-sm text-gray-400">
                                <i class="fas fa-calendar mr-1"></i>
                                ${formatDate(item.updatedAt)}
                            </div>
                        </div>
                        
                        <div class="text-gray-600 mb-4">
                            ${truncateHTML(version.content, 150)}
                        </div>
                        
                        <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-2 text-sm text-gray-500">
                                <i class="fas fa-eye"></i>
                                <span>자세히 보기</span>
                            </div>
                            <div class="flex items-center space-x-1 text-sm text-gray-400">
                                <i class="fas fa-clock mr-1"></i>
                                <span>${formatDate(version.lastModified || item.updatedAt)}</span>
                            </div>
                        </div>
                    </article>
                `;
            }).join('');
            
            contentList.innerHTML = contentHTML;
        }

        // 페이지네이션 렌더링
        function renderPagination(totalPages) {
            const pagination = document.getElementById('pagination');
            
            if (totalPages <= 1) {
                pagination.innerHTML = '';
                return;
            }
            
            let paginationHTML = '<nav class="flex items-center space-x-2">';
            
            // 이전 버튼
            if (currentPage > 1) {
                paginationHTML += `
                    <button onclick="goToPage(${currentPage - 1})" class="px-3 py-2 text-gray-500 hover:text-[#4B63AC] hover:bg-gray-100 rounded-lg transition duration-200">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                `;
            }
            
            // 페이지 번호들
            const startPage = Math.max(1, currentPage - 2);
            const endPage = Math.min(totalPages, currentPage + 2);
            
            for (let i = startPage; i <= endPage; i++) {
                const isActive = i === currentPage;
                paginationHTML += `
                    <button onclick="goToPage(${i})" class="px-4 py-2 rounded-lg transition duration-200 ${
                        isActive 
                            ? 'bg-[#4B63AC] text-white' 
                            : 'text-gray-700 hover:bg-gray-100 hover:text-[#4B63AC]'
                    }">
                        ${i}
                    </button>
                `;
            }
            
            // 다음 버튼
            if (currentPage < totalPages) {
                paginationHTML += `
                    <button onclick="goToPage(${currentPage + 1})" class="px-3 py-2 text-gray-500 hover:text-[#4B63AC] hover:bg-gray-100 rounded-lg transition duration-200">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                `;
            }
            
            paginationHTML += '</nav>';
            pagination.innerHTML = paginationHTML;
        }

        // 이벤트 리스너 설정
        function setupEventListeners() {
            // 검색 버튼
            document.getElementById('searchBtn').addEventListener('click', () => {
                currentPage = 1;
                loadContent();
            });
            
            // 검색 입력 엔터키
            document.getElementById('searchInput').addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    currentPage = 1;
                    loadContent();
                }
            });
            
            // 필터 체크박스
            document.querySelectorAll('input[name="category"], input[name="priority"]').forEach(checkbox => {
                checkbox.addEventListener('change', () => {
                    currentPage = 1;
                    loadContent();
                });
            });
            
            // 정렬 드롭다운
            document.getElementById('sortBy').addEventListener('change', () => {
                currentPage = 1;
                loadContent();
            });
        }

        // 커뮤니티용 샘플 데이터 생성
        function generateCommunityContent() {
            const currentTime = new Date().toISOString();
            
            return [
                {
                    id: 'welcome_community_001',
                    type: 'notices',
                    priority: 'high',
                    createdAt: currentTime,
                    updatedAt: currentTime,
                    versions: {
                        ko: {
                            title: 'LikeVoca 커뮤니티에 오신 것을 환영합니다!',
                            content: '<div class="prose max-w-none"><h2>🎉 커뮤니틴 오픈!</h2><p>언어학습에 도움이 되는 다양한 가이드와 팁을 공유하는 새로운 커뮤니티 공간이 오픈되었습니다.</p><ul><li>학습 가이드 및 전략</li><li>새로운 기능 안내</li><li>공지사항 및 업데이트</li></ul><p>여러분의 언어학습 여정에 도움이 되는 유용한 정보들을 찾아보세요!</p></div>',
                            published: true,
                            lastModified: currentTime,
                            translationStatus: 'updated'
                        }
                    }
                },
                {
                    id: 'learning_guide_001',
                    type: 'guide',
                    priority: 'high',
                    createdAt: currentTime,
                    updatedAt: currentTime,
                    versions: {
                        ko: {
                            title: '효과적인 단어 학습 전략',
                            content: '<div class="prose max-w-none"><h2>📚 단어 학습의 과학적 접근법</h2><p>언어학습에서 가장 중요한 것 중 하나는 어휘 학습입니다. 여기 효과적인 단어 학습 전략을 소개합니다.</p><h3>🔄 간격 반복 학습법</h3><ul><li>1일 후: 첫 번째 복습</li><li>3일 후: 두 번째 복습</li><li>1주일 후: 세 번째 복습</li><li>2주일 후: 네 번째 복습</li></ul><h3>🎯 능동적 회상법</h3><p>단순히 읽기보다는 직접 생각해내는 것이 효과적입니다.</p></div>',
                            published: true,
                            lastModified: currentTime,
                            translationStatus: 'updated'
                        }
                    }
                },
                {
                    id: 'faq_getting_started_001',
                    type: 'faq',
                    priority: 'normal',
                    createdAt: currentTime,
                    updatedAt: currentTime,
                    versions: {
                        ko: {
                            title: 'LikeVoca를 처음 시작하는 방법은?',
                            content: '<div class="prose max-w-none"><p>LikeVoca를 처음 사용하시는 분들을 위한 간단한 가이드입니다:</p><ol><li><strong>계정 생성</strong>: 이메일로 가입하거나 Google/Facebook 소셜 로그인을 이용하세요.</li><li><strong>레벨 테스트</strong>: 간단한 어휘 테스트로 내 수준을 확인해보세요.</li><li><strong>AI 단어 추천</strong>: 내 수준에 맞는 다양한 단어들을 만나보세요.</li><li><strong>게임으로 학습</strong>: 재미있는 게임으로 단어를 익혀보세요!</li></ol></div>',
                            published: true,
                            lastModified: currentTime,
                            translationStatus: 'updated'
                        }
                    }
                }
            ];
        }

        // 유틸리티 함수들
        window.goToPage = function(page) {
            currentPage = page;
            loadContent();
        };

        window.clearFilters = function() {
            document.querySelectorAll('input[name="category"], input[name="priority"]').forEach(cb => cb.checked = false);
            document.querySelector('input[name="category"][value="all"]').checked = true;
            document.querySelector('input[name="priority"][value="all"]').checked = true;
            document.getElementById('searchInput').value = '';
            document.getElementById('sortBy').value = 'newest';
            currentPage = 1;
            loadContent();
        };

        window.openContentModal = function(contentId) {
            // 상세 콘텐츠 모달 구현
            const content = contentManager.contentData.find(item => item.id === contentId);
            if (!content) return;
            
            const version = content.versions[contentManager.language];
            if (!version) return;
            
            // 상세보기 페이지로 이동하거나 모달 표시
            // 여기서는 간단히 새 창으로 표시
            const newWindow = window.open('', '_blank', 'width=800,height=600');
            const htmlContent = `
                <html>
                    <head>
                        <title>${version.title} - LikeVoca</title>
                        <script src="https://cdn.tailwindcss.com"><\/script>
                    </head>
                    <body class="bg-gray-50 p-8">
                        <div class="max-w-4xl mx-auto bg-white rounded-lg shadow-lg p-8">
                            <h1 class="text-3xl font-bold text-gray-900 mb-4">${version.title}</h1>
                            <div class="prose max-w-none">
                                ${version.content}
                            </div>
                        </div>
                    </body>
                </html>
            `;
            newWindow.document.write(htmlContent);
            newWindow.document.close();
        };

        function formatDate(dateString) {
            if (!dateString) return '-';
            const date = new Date(dateString);
            return date.toLocaleDateString('ko-KR', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            });
        }

        function truncateHTML(html, maxLength) {
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = html;
            const text = tempDiv.textContent || tempDiv.innerText || '';
            return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;
        }

        function showError(message) {
            const contentList = document.getElementById('contentList');
            contentList.innerHTML = `
                <div class="text-center py-12">
                    <i class="fas fa-exclamation-triangle text-4xl text-red-400 mb-4"></i>
                    <p class="text-red-600">${message}</p>
                </div>
            `;
        }
    </script>
</body>
</html>